services:
  broker:
    image: apache/kafka:latest
    container_name: broker
    ports:
      - "9092:9092"
    environment:
      KAFKA_NODE_ID: 1
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: 'CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT'
      KAFKA_LISTENERS: 'PLAINTEXT://0.0.0.0:9092,CONTROLLER://0.0.0.0:9093'
      KAFKA_ADVERTISED_LISTENERS: 'PLAINTEXT://broker:9092'
      KAFKA_CONTROLLER_QUORUM_VOTERS: '1@broker:9093'
      KAFKA_PROCESS_ROLES: 'broker,controller'
      KAFKA_CONTROLLER_LISTENER_NAMES: 'CONTROLLER'
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_NUM_PARTITIONS: 3
      KAFKA_TOPIC_CONFIG_retention.ms: 180000 # 3 minute retention period
      CLUSTER_ID: 'OTYwMzU2ZWU3MDQwNGU1Nz'
    healthcheck:
      test: ["CMD", "/opt/kafka/bin/kafka-broker-api-versions.sh", "--bootstrap-server", "localhost:9092"]
      interval: 10s
      timeout: 5s
      retries: 5
    volumes:
      - ./broker_data:/var/lib/kafka/data
    networks:
      - kafka-net

  custom-producer:
    build:
      context: ./kafka_producer
    depends_on:
      broker:
          condition: service_started
    environment:
      KAFKA_SERVER: "broker:9092"
      PRODUCER_INTERVAL: 2
    networks:
      - kafka-net
  
  custom_consumer:
    build:
      context: ./spark_kafka_consumer
    depends_on:
      custom-producer:
          condition: service_started
    environment:
      KAFKA_SERVER: "broker:9092"
      CONSUMER_INTERVAL: 2
    volumes:
      - ./consumer_data:/app/data
      - ./input_data:/app/input_data
    networks:
      - kafka-net

networks:
  kafka-net:
    driver: bridge

