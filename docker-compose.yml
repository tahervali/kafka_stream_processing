services:
  broker:
    image: apache/kafka:latest
    container_name: broker
    ports:
      - "9092:9092"
    environment:
      KAFKA_NODE_ID: ${KAFKA_NODE_ID}
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: ${KAFKA_LISTENER_SECURITY_PROTOCOL_MAP}
      KAFKA_LISTENERS: ${KAFKA_LISTENERS}
      KAFKA_ADVERTISED_LISTENERS: ${KAFKA_ADVERTISED_LISTENERS}
      KAFKA_CONTROLLER_QUORUM_VOTERS: ${KAFKA_CONTROLLER_QUORUM_VOTERS}
      KAFKA_PROCESS_ROLES: ${KAFKA_PROCESS_ROLES}
      KAFKA_CONTROLLER_LISTENER_NAMES: ${KAFKA_CONTROLLER_LISTENER_NAMES}
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: ${KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR}
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: ${KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR}
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: ${KAFKA_TRANSACTION_STATE_LOG_MIN_ISR}
      KAFKA_NUM_PARTITIONS: ${KAFKA_NUM_PARTITIONS}
      KAFKA_TOPIC_CONFIG_retention.ms: ${KAFKA_TOPIC_CONFIG_retention_ms}
      CLUSTER_ID: ${CLUSTER_ID}
    healthcheck:
      test: ["CMD", "/opt/kafka/bin/kafka-broker-api-versions.sh", "--bootstrap-server", "localhost:9092"]
      interval: 10s
      timeout: 5s
      retries: 5
    volumes:
      - ${BROKER_DATA}:/var/lib/kafka/data
    networks:
      - kafka-net

  custom-producer:
    build:
      context: ./kafka_producer
      target: production
    depends_on:
      broker:
          condition: service_started
    environment:
      KAFKA_SERVER: ${KAFKA_SERVER}
      PRODUCER_INTERVAL: ${PRODUCER_INTERVAL}
    networks:
      - kafka-net
  
  producer-test:
    build:
      context: ./kafka_producer
      dockerfile: Dockerfile
      target: test
    depends_on:
      broker:
          condition: service_started
    networks:
      - kafka-net
  
  custom_consumer:
    build:
      context: ./spark_kafka_consumer
    depends_on:
      custom-producer:
          condition: service_started
    environment:
      KAFKA_SERVER: ${KAFKA_SERVER}
      CONSUMER_INTERVAL: ${CONSUMER_INTERVAL}
    volumes:
      - ./${LOG_DATA}/output_data:/app/data
      - ./${LOG_DATA}/input_data:/app/input_data
    networks:
      - kafka-net

networks:
  kafka-net:
    driver: bridge

